{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is used to deploy a VM instance on a MEC VPC.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "MgmtSubnetID",
                        "S1USubnetID",
                        "SGISubnetID",
                        "SecurityGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "VM Configuration"
                    },
                    "Parameters": [
                        "EC2InstanceName",
                        "KeyPairName",
                        "AMIID",
                        "InstanceType",
                        "EnableTCPForwarding",
                        "ENBNETCIDR",
                        "S3BucketName"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPCID": {
                    "default": "VPC ID"
                },
                "MgmtSubnetID": {
                    "default": "Management Subnet ID"
                },
                "S1USubnetID": {
                    "default": "S1U Subnet ID"
                },
                "SGISubnetID": {
                    "default": "SGI Subnet ID"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Instance External Access CIDR"
                },
                "AMIID": {
                    "default": "AMI Operating System ID"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "EC2InstanceName": {
                    "default": "Instance Name"
                },
                "EnableTCPForwarding": {
                    "default": "Enable TCP Forwarding"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
				"SecurityGroup": {
                    "default": "Security Group Name"
                },
                "UENETCIDR": {
                    "default": "UE NET CIDR for the instance"
                },
                "S3BucketName": {
                    "default": "S3 Bucket Name"
                }
            }
        }
    },
    "Parameters": {
	    "AMIID": {
		    "Description": "The Linux distribution for the AMI to be used for the EC2 instances",
		    "Type": "AWS::EC2::Image::Id"
	    },
	    "InstanceType": {
		    "AllowedValues": [
			    "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
			    "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "m5.24xlarge",
                "m5d.large",
                "m5d.xlarge",
                "m5d.2xlarge",
                "m5d.4xlarge",
                "m5d.12xlarge",
                "m5d.24xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.18xlarge",
                "c5d.large",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
                "c5d.18xlarge",
                "c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
                "c5n.18xlarge"
		    ],
		    "Default": "c5n.xlarge",
		    "Description": "Amazon EC2 instance type",
		    "Type": "String"
        },
        "EC2InstanceName": {
            "Default": "VPC-MEC-Instance",
            "Description": "EC2 Instance Name",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Enter a public/private key pair. If you do not have one in this region, please create it before continuing",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "VPCID": {
            "Description": "ID of the VPC",
            "Type": "AWS::EC2::VPC::Id"
        },
        "MgmtSubnetID": {
            "Description": "ID of the Mgmt subnet that you want to provision the EC2 instance into",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "S1USubnetID": {
            "Description": "ID of the S1U subnet that you want to provision the EC2 instance into",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "SGISubnetID": {
            "Description": "ID of the SGI subnet that you want to provision the EC2 instance into",
            "Type": "AWS::EC2::Subnet::Id"
        },
		"SecurityGroup": {
            "Description": "ID of the Security Group that you want to provision the EC2 instance into",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "S3BucketName": {
			"Description": "S3 Bucket Name",
			"Type": "String"
		},
        "UENETCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for UE NET",
            "Type": "String",
            "Default": "172.16.0.0/16"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must exist in the VPC"
                }
            ]
        }
    },
    
    "Resources": {

        "InterfaceMgmt" : {
            "Type" : "AWS::EC2::NetworkInterface",
            "Properties" : {
                "SubnetId" : { "Ref" : "MgmtSubnetID" },
                "Description" :"Interface for management traffic",
                "GroupSet" : [ {"Ref" : "SecurityGroup"} ],
                "SourceDestCheck" : "true",
                "Tags" : [{"Key" : "Name", "Value" : {"Fn::Sub": "${EC2InstanceName}-Mgmt-Iface"}}]
            }
        },
        "InterfaceS1U" : {
            "Type" : "AWS::EC2::NetworkInterface",
            "Properties" : {
                "SubnetId" : { "Ref" : "S1USubnetID" },
                "Description" :"Interface for management traffic",
                "GroupSet" : [ {"Ref" : "SecurityGroup"} ],
                "SourceDestCheck" : "false",
                "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Sub": "${EC2InstanceName}-S1U-Iface"}}]
            }
        },
        "InterfaceSGI" : {
            "Type" : "AWS::EC2::NetworkInterface",
            "Properties" : {
                "SubnetId" : { "Ref" : "SGISubnetID" },
                "Description" :"Interface for management traffic",
                "GroupSet" : [ {"Ref" : "SecurityGroup"} ],
                "SourceDestCheck" : "false",
                "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Sub": "${EC2InstanceName}-SGI-Iface"}}]
            }
        },
        "GetRouteTableID": {
			"Type": "Custom::RouteTableID",
			"Properties": {
				"ServiceToken": { "Fn::GetAtt" : ["RouteTableIDFunction", "Arn"] },
				"SubnetID": {"Ref": "SGISubnetID"}
			}
		},

		"RouteTableIDFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
			"Code": {
				"S3Bucket": {"Ref": "S3BucketName"},
				"S3Key": "lambda_function.zip"
			},
			"Handler": "lambda_function.lambda_handler",
			"Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
			"Runtime": "python3.8",
			"Timeout": "30"
			}
		},
        
        "EC2Instance" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "ImageId": {
                    "Ref": "AMIID"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "NetworkInterfaces": [
                    {
                    "NetworkInterfaceId" : {"Ref" : "InterfaceMgmt"},
                    "DeviceIndex": "0"
                    },
                    {
                    "NetworkInterfaceId" : {"Ref" : "InterfaceS1U"},
                    "DeviceIndex": "1"
                    },
                    {
                    "NetworkInterfaceId" : {"Ref" : "InterfaceSGI"},
                    "DeviceIndex": "2"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Ref" : "EC2InstanceName"}
                    },
                    {   "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "LambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {"Service": ["lambda.amazonaws.com"]},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/",
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
					"arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
				]
			}
		},
		"VPCMECSGIUENETRoute" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : {"Fn::GetAtt": ["GetRouteTableID", "RouteTableId"]},
				"DestinationCidrBlock" : {"Ref": "UENETCIDR"},
				"NetworkInterfaceId" : {"Ref" : "InterfaceSGI"}
			}
		}
    },

    "Outputs": {
        "EC2InstanceID": {
            "Description": "EC2 Instance ID",
            "Value": {
                "Ref": "EC2Instance"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EC2InstanceID"
                }
            }
        },
        "SecurityGroupID": {
            "Description": "Security Group ID",
            "Value": {
                "Ref": "SecurityGroup"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SecurityGroupID"
                }
            }
        }
    }
}